/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

/**
 *
 * @author Dell
 */
import Application.Uber;
import Application.UberInventory;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;

public class CarRidesTableJPanel extends javax.swing.JPanel {
    private JPanel rightJPanel;
    private UberInventory uberInventory;
    private ArrayList<Uber> carList;
    private ArrayList<Uber> templist;
        
    private int minseats;
    private int maxseats;
    /**
     * Creates new form TableJPanel
     */
    CarRidesTableJPanel(JPanel rightJPanel, ArrayList<Uber> result, UberInventory uberInventory) {
        initComponents();
        this.rightJPanel = rightJPanel;
        this.carList = result;
        this.uberInventory = uberInventory;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtInputFieldd = new javax.swing.JTextField();
        lblSearchfield = new javax.swing.JLabel();
        btnViewCarDetails = new javax.swing.JButton();
        lblManageRides = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarDetails1 = new javax.swing.JTable();
        btnFindFirstAvailCar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnCarManuList = new javax.swing.JButton();
        btnSeatsMinMax = new javax.swing.JButton();
        btnSearchByModelNo = new javax.swing.JButton();
        btnSearchbyExpiryMCerti = new javax.swing.JButton();
        btnSearchBySerialNo = new javax.swing.JButton();
        btnSearchByCity = new javax.swing.JButton();
        btnSearchByMfgYr = new javax.swing.JButton();
        lblEnterMinSeats = new javax.swing.JLabel();
        btnListAvailableCars = new javax.swing.JButton();
        lblEnterMaxSeats = new javax.swing.JLabel();
        btnSearchByCarBrand = new javax.swing.JButton();
        txtEnterMinSeats = new javax.swing.JTextField();
        txtEnterMaxSeats = new javax.swing.JTextField();
        lblSearchByCarSeats = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        lblCountCars = new javax.swing.JLabel();
        txtCountCars = new javax.swing.JTextField();
        btnBACKfunc = new javax.swing.JButton();

        setBackground(new java.awt.Color(185, 180, 180));

        txtInputFieldd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInputFielddActionPerformed(evt);
            }
        });

        lblSearchfield.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSearchfield.setText("Search By:");

        btnViewCarDetails.setText("View");
        btnViewCarDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCarDetailsActionPerformed(evt);
            }
        });

        lblManageRides.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblManageRides.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageRides.setText("TABLE");

        tblCarDetails1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Car Brand", "Car model", "Manufacturing Year", "Max.number of Seats", "Minimum no.ofBachelors", "Car Serial No.", "City", "Car Availability", "Expired_Data"
            }
        ));
        tblCarDetails1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(tblCarDetails1);

        btnFindFirstAvailCar.setText("Find first available car");
        btnFindFirstAvailCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindFirstAvailCarActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnCarManuList.setText("Car Manufacturer list");
        btnCarManuList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarManuListActionPerformed(evt);
            }
        });

        btnSeatsMinMax.setText("Search by Seat requirements");
        btnSeatsMinMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeatsMinMaxActionPerformed(evt);
            }
        });

        btnSearchByModelNo.setText("Search by model no.");
        btnSearchByModelNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByModelNoActionPerformed(evt);
            }
        });

        btnSearchbyExpiryMCerti.setText("Search by Maintenance Cert.");
        btnSearchbyExpiryMCerti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyExpiryMCertiActionPerformed(evt);
            }
        });

        btnSearchBySerialNo.setText("Search By Serial no.");
        btnSearchBySerialNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBySerialNoActionPerformed(evt);
            }
        });

        btnSearchByCity.setText("Search by City");
        btnSearchByCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByCityActionPerformed(evt);
            }
        });

        btnSearchByMfgYr.setText("Search by Mfg. Yr.");
        btnSearchByMfgYr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByMfgYrActionPerformed(evt);
            }
        });

        lblEnterMinSeats.setText("Enter minimum seats:");

        btnListAvailableCars.setText("List available cars");
        btnListAvailableCars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListAvailableCarsActionPerformed(evt);
            }
        });

        lblEnterMaxSeats.setText("Enter maximum seats:");

        btnSearchByCarBrand.setText("Search by Car Brand");
        btnSearchByCarBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByCarBrandActionPerformed(evt);
            }
        });

        lblSearchByCarSeats.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSearchByCarSeats.setText("Search by car seats:");

        lblCountCars.setText("Count:");

        btnBACKfunc.setText("BACK");
        btnBACKfunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBACKfuncActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSearchByCarSeats)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEnterMaxSeats)
                                    .addComponent(btnSeatsMinMax)
                                    .addComponent(txtEnterMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEnterMinSeats)
                                    .addComponent(txtEnterMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSearchfield, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtInputFieldd, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnViewCarDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(lblCountCars)
                                .addGap(18, 18, 18)
                                .addComponent(txtCountCars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnBACKfunc))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnFindFirstAvailCar, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnListAvailableCars, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnSearchByCarBrand)
                                            .addComponent(btnSearchByMfgYr))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(55, 55, 55)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(btnSearchBySerialNo, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(btnSearchByModelNo, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(btnCarManuList, javax.swing.GroupLayout.Alignment.TRAILING)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnSearchByCity))))
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(btnSearchbyExpiryMCerti)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(lblManageRides, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCarManuList, btnFindFirstAvailCar, btnListAvailableCars, btnSearchByCarBrand, btnSearchByCity, btnSearchByMfgYr, btnSearchByModelNo, btnSearchBySerialNo, btnSearchbyExpiryMCerti});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnViewCarDetails, txtCountCars});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblManageRides, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnViewCarDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCountCars)
                            .addComponent(txtCountCars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInputFieldd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSearchfield))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEnterMaxSeats)
                            .addComponent(lblEnterMinSeats))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEnterMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEnterMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSearchByCarSeats))
                        .addGap(18, 18, 18)
                        .addComponent(btnSeatsMinMax)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBACKfunc))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnFindFirstAvailCar)
                                    .addComponent(btnSearchBySerialNo))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(122, 122, 122)
                                        .addComponent(btnSearchByMfgYr))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(btnListAvailableCars)
                                            .addComponent(btnSearchByModelNo))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(btnSearchByCarBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnCarManuList))
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSearchByCity)))
                                .addGap(29, 29, 29)
                                .addComponent(btnSearchbyExpiryMCerti)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCarManuList, btnFindFirstAvailCar, btnListAvailableCars, btnSearchByCarBrand, btnSearchByCity, btnSearchByMfgYr, btnSearchByModelNo, btnSearchBySerialNo, btnSearchbyExpiryMCerti});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnViewCarDetails, txtCountCars});

    }// </editor-fold>//GEN-END:initComponents

    private void btnViewCarDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCarDetailsActionPerformed
        // TODO add your handling code here:
        int selectedRowTableVC = tblCarDetails1.getSelectedRow();
        if(selectedRowTableVC<0){
            JOptionPane.showMessageDialog(null, "Please select a row from Table", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Uber uber = (Uber) tblCarDetails1.getValueAt((selectedRowTableVC), 0);
            ViewCarRidesJPanel amPanel = new ViewCarRidesJPanel (rightJPanel, uber);
            rightJPanel.add("ViewJPanel",amPanel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next(rightJPanel);
        }
    }//GEN-LAST:event_btnViewCarDetailsActionPerformed

    private void btnFindFirstAvailCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindFirstAvailCarActionPerformed
        // TODO add your handling code here:
        ArrayList<Uber> resultTable = uberInventory.searchFirstAvailUber(txtInputFieldd.getText(), uberInventory.getUberList());
        CarRidesTableJPanel panel = new CarRidesTableJPanel(rightJPanel, resultTable, uberInventory);
        rightJPanel.add("TableJPanel", panel);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.next (rightJPanel);

        txtInputFieldd.setText("");
    }//GEN-LAST:event_btnFindFirstAvailCarActionPerformed

    private void btnCarManuListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarManuListActionPerformed
        // TODO add your handling code here:
        CarManufacturersList amPanelTable = new CarManufacturersList (rightJPanel, uberInventory);
        rightJPanel.add("ManuJPanel",amPanelTable);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.next(rightJPanel);
    }//GEN-LAST:event_btnCarManuListActionPerformed

    private void btnSeatsMinMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeatsMinMaxActionPerformed
        // TODO add your handling code here:
        int minSeatsTable = Integer.parseInt(txtEnterMinSeats.getText());
        int maxSeatsTable = Integer.parseInt(txtEnterMaxSeats.getText());
        ArrayList<Uber> result = uberInventory.searchSeatsAvail(minSeatsTable , maxSeatsTable, uberInventory.getUberList());

        CarRidesTableJPanel panel = new CarRidesTableJPanel(rightJPanel, result, uberInventory);
        rightJPanel.add("TableJPanel", panel);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.next (rightJPanel);

        txtEnterMaxSeats.setText("");
        txtEnterMinSeats.setText("");
    }//GEN-LAST:event_btnSeatsMinMaxActionPerformed

    private void btnSearchByModelNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByModelNoActionPerformed
        // TODO add your handling code here:
        ArrayList<Uber> result = uberInventory.searchModelNumber(txtInputFieldd.getText(),uberInventory.getUberList());
        if (result.size() == 0)
        {
            JOptionPane.showMessageDialog(null,"The Model Number you entered does not exist", " Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            CarRidesTableJPanel panel = new CarRidesTableJPanel(rightJPanel,result,uberInventory);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
        }
    }//GEN-LAST:event_btnSearchByModelNoActionPerformed

    private void btnSearchbyExpiryMCertiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyExpiryMCertiActionPerformed
        // TODO add your handling code here:
        String resultTable = txtInputFieldd.getText();
        if (resultTable == null || resultTable.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter the car maintainance certificate status", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        {
            ArrayList<Uber> resultTableList = uberInventory.searchMainCerti(txtInputFieldd.getText(), uberInventory.getUberList());
            CarRidesTableJPanel panel = new CarRidesTableJPanel(rightJPanel, resultTableList, uberInventory);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);

            txtInputFieldd.setText("");
        }
    }//GEN-LAST:event_btnSearchbyExpiryMCertiActionPerformed

    private void btnSearchBySerialNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBySerialNoActionPerformed
        // TODO add your handling code here:
        String resultTable = txtInputFieldd.getText();
        if (resultTable == null || resultTable.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter the Serial Number", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            Integer.parseInt(txtInputFieldd.getText());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"You need to put valid value", " Warning", JOptionPane.WARNING_MESSAGE);
        }
        {
            ArrayList<Uber> resultTabList = uberInventory.searchSerialNumber(txtInputFieldd.getText(),uberInventory.getUberList());
            CarRidesTableJPanel panel = new CarRidesTableJPanel(rightJPanel, resultTabList, uberInventory);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
        }
        txtInputFieldd.setText("");
    }//GEN-LAST:event_btnSearchBySerialNoActionPerformed

    private void btnSearchByCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByCityActionPerformed
        // TODO add your handling code here:
        ArrayList<Uber> resultTabList = uberInventory.searchAvailCity(txtInputFieldd.getText(), uberInventory.getUberList());
        if (resultTabList.size() == 0){
            JOptionPane.showMessageDialog(null,"The Available City Name you entered does not exist", " Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            CarRidesTableJPanel panel = new CarRidesTableJPanel(rightJPanel,resultTabList,uberInventory);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);

            txtInputFieldd.setText("");
        }
    }//GEN-LAST:event_btnSearchByCityActionPerformed

    private void btnSearchByMfgYrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByMfgYrActionPerformed
        // TODO add your handling code here:
        String resultManage = txtInputFieldd.getText();
        if (resultManage == null || resultManage.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter the manufacturing year", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            Integer.parseInt(txtInputFieldd.getText());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Please give a valid input", " Warning", JOptionPane.WARNING_MESSAGE);
        }
        {
            ArrayList<Uber> resultManageAL = uberInventory.searchManuYear(txtInputFieldd.getText(), uberInventory.getUberList());
            CarRidesTableJPanel panel = new CarRidesTableJPanel(rightJPanel, resultManageAL, uberInventory);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
        }
        txtInputFieldd.setText("");
    }//GEN-LAST:event_btnSearchByMfgYrActionPerformed

    private void btnListAvailableCarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListAvailableCarsActionPerformed
        // TODO add your handling code here:
        String resultManage = txtInputFieldd.getText();
        if (resultManage == null || resultManage.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter the Availability status", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        {
            ArrayList<Uber> resultAL = uberInventory.searchAvailStatus(txtInputFieldd.getText(), uberInventory.getUberList());
            CarRidesTableJPanel panel = new CarRidesTableJPanel(rightJPanel, resultAL, uberInventory);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);

        }
        txtInputFieldd.setText("");
    }//GEN-LAST:event_btnListAvailableCarsActionPerformed

    private void btnSearchByCarBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByCarBrandActionPerformed
        ArrayList<Uber> resultCB = uberInventory.searchBrand1(txtInputFieldd.getText(), carList);
        if (resultCB.size() == 0){
            JOptionPane.showMessageDialog(null,"The Brand Name you entered does not exist", " Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            UpdatedCarEntryTablePanel panel = new UpdatedCarEntryTablePanel(rightJPanel,resultCB);
            rightJPanel.add("UpdatedResultsPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
        }
        txtInputFieldd.setText("");
    }//GEN-LAST:event_btnSearchByCarBrandActionPerformed

    private void txtInputFielddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInputFielddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInputFielddActionPerformed

    private void btnBACKfuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBACKfuncActionPerformed
        // TODO add your handling code here:
        rightJPanel.remove(this);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.previous(rightJPanel);
    }//GEN-LAST:event_btnBACKfuncActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBACKfunc;
    private javax.swing.JButton btnCarManuList;
    private javax.swing.JButton btnFindFirstAvailCar;
    private javax.swing.JButton btnListAvailableCars;
    private javax.swing.JButton btnSearchByCarBrand;
    private javax.swing.JButton btnSearchByCity;
    private javax.swing.JButton btnSearchByMfgYr;
    private javax.swing.JButton btnSearchByModelNo;
    private javax.swing.JButton btnSearchBySerialNo;
    private javax.swing.JButton btnSearchbyExpiryMCerti;
    private javax.swing.JButton btnSeatsMinMax;
    private javax.swing.JButton btnViewCarDetails;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblCountCars;
    private javax.swing.JLabel lblEnterMaxSeats;
    private javax.swing.JLabel lblEnterMinSeats;
    private javax.swing.JLabel lblManageRides;
    private javax.swing.JLabel lblSearchByCarSeats;
    private javax.swing.JLabel lblSearchfield;
    private javax.swing.JTable tblCarDetails1;
    private javax.swing.JTextField txtCountCars;
    private javax.swing.JTextField txtEnterMaxSeats;
    private javax.swing.JTextField txtEnterMinSeats;
    private javax.swing.JTextField txtInputFieldd;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
         //To change body of generated methods, choose Tools | Templates.
         DefaultTableModel dtm = (DefaultTableModel) tblCarDetails1.getModel();
            dtm.setRowCount(0);
            for (Uber uber : carList)
            {
                
                Object[] row = new Object [9];
                row [0] = uber;
                row [1] = uber.getCarModelNo();
                row [2] = uber.getCarManuYear();
                row [3] = uber.getCarMaxSeats();
                row [4] = uber.getCarMinSeats();
                row [5] = uber.getCarSerialNo();
                row [6] = uber.getCity();
                row [7] = uber.isCarAvailability();
                row [8] = uber.isCarExpiry();
                
                dtm.addRow(row);                
            }
            int num = dtm.getRowCount();
            txtCountCars.setText((String.valueOf(num)));
    }

    void populateTable(UberInventory uberInventory, String all) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
