/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

/**
 *
 * @author Dell
 */
import Application.Uber;
import Application.UberInventory;
import java.awt.CardLayout;
import java.awt.Component;
import java.security.Timestamp;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.util.Date;
import java.text.SimpleDateFormat;

public class ViewCarRidesJPanel extends javax.swing.JPanel {
    private JPanel rightJPanel;
    private Uber uber;
    
    private UberInventory uberInventory;

    /**
     * Creates new form ViewJPanel
     */
    ViewCarRidesJPanel(JPanel rightJPanel, Uber uber) {
        initComponents();
        this.rightJPanel = rightJPanel;
        this.uber = uber;
        populateUber();
        
        txtCarBrandView.setEditable(false);
        txtManuYearView.setEditable(false);
        txtMaxSeatView.setEditable(false);
        txtMinSeatsView.setEditable(false);
        txtCarSerialView.setEditable(false);
        txtCarModelNoView.setEditable(false);
        txtCityView.setEditable(false);
        chkboxAvailableView.setEnabled(false);
        chlboxBookedView.setEnabled(false);
        jChkExpiredView.setEnabled(false);
        jChkNotExpiredView.setEnabled(false);
        btnSaveView.setEnabled(false);
        btnUpdateView.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        btnUpdateView = new javax.swing.JButton();
        btnSaveView = new javax.swing.JButton();
        txtLastUpdateView = new javax.swing.JTextField();
        lblLastUpdate = new javax.swing.JLabel();
        lblCreateRide = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        txtManuYearView = new javax.swing.JTextField();
        txtCityView = new javax.swing.JTextField();
        txtMaxSeatView = new javax.swing.JTextField();
        lblCarBrand = new javax.swing.JLabel();
        txtMinSeatsView = new javax.swing.JTextField();
        lblManufacturingYear = new javax.swing.JLabel();
        chkboxAvailableView = new javax.swing.JCheckBox();
        lblMaxSeats = new javax.swing.JLabel();
        chlboxBookedView = new javax.swing.JCheckBox();
        lblCarModelNumber = new javax.swing.JLabel();
        jChkExpiredView = new javax.swing.JCheckBox();
        lblMinSeats = new javax.swing.JLabel();
        jChkNotExpiredView = new javax.swing.JCheckBox();
        lblCarAvailability = new javax.swing.JLabel();
        lblExpiryCertifcate = new javax.swing.JLabel();
        lblCarSerialNo = new javax.swing.JLabel();
        txtCarBrandView = new javax.swing.JTextField();
        txtCarSerialView = new javax.swing.JTextField();
        txtCarModelNoView = new javax.swing.JTextField();
        btnBACKView = new javax.swing.JButton();

        setBackground(new java.awt.Color(185, 180, 180));

        btnUpdateView.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnUpdateView.setText("Update");
        btnUpdateView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateViewActionPerformed(evt);
            }
        });

        btnSaveView.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnSaveView.setText("Save");
        btnSaveView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveViewActionPerformed(evt);
            }
        });

        lblLastUpdate.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblLastUpdate.setText("Last Update Occurred On :");

        lblCreateRide.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblCreateRide.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateRide.setText("VIEW CAR DETAILS");

        lblCity.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblCity.setText("City:");

        lblCarBrand.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblCarBrand.setText("Car Brand:");

        lblManufacturingYear.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblManufacturingYear.setText("Manufacturing Year:");

        buttonGroup1.add(chkboxAvailableView);
        chkboxAvailableView.setText("Available");

        lblMaxSeats.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblMaxSeats.setText("Enter max. seat capacity:");

        buttonGroup1.add(chlboxBookedView);
        chlboxBookedView.setText("Booked");

        lblCarModelNumber.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblCarModelNumber.setText("Car Model number:");

        buttonGroup2.add(jChkExpiredView);
        jChkExpiredView.setText("Expired");

        lblMinSeats.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblMinSeats.setText("Enter min. seat capacity:");

        buttonGroup2.add(jChkNotExpiredView);
        jChkNotExpiredView.setText("Not expired");

        lblCarAvailability.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblCarAvailability.setText("Car Availability:");

        lblExpiryCertifcate.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblExpiryCertifcate.setText("Maintenance expiry certificate:");

        lblCarSerialNo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblCarSerialNo.setText("Enter the car serial no:");

        txtCarBrandView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarBrandViewActionPerformed(evt);
            }
        });

        btnBACKView.setText("BACK");
        btnBACKView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBACKViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCarAvailability, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCity, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblExpiryCertifcate, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSaveView, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCarSerialNo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMinSeats, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMaxSeats, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblManufacturingYear, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCarModelNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCarBrand, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jChkExpiredView))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCityView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chkboxAvailableView)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chlboxBookedView))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(jChkNotExpiredView))
                            .addComponent(txtCarBrandView, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCarModelNoView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtManuYearView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaxSeatView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMinSeatsView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCarSerialView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btnUpdateView)))
                .addGap(253, 253, 253))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnBACKView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCreateRide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(lblLastUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLastUpdateView, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCarBrandView, txtCarModelNoView, txtCarSerialView, txtCityView, txtManuYearView, txtMaxSeatView, txtMinSeatsView});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblCreateRide, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnBACKView)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarBrand)
                    .addComponent(txtCarBrandView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarModelNumber)
                    .addComponent(txtCarModelNoView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManufacturingYear)
                    .addComponent(txtManuYearView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaxSeats)
                    .addComponent(txtMaxSeatView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMinSeats)
                    .addComponent(txtMinSeatsView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarSerialNo)
                    .addComponent(txtCarSerialView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCityView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCity))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarAvailability)
                    .addComponent(chkboxAvailableView)
                    .addComponent(chlboxBookedView))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblExpiryCertifcate)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jChkExpiredView)
                        .addComponent(jChkNotExpiredView)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateView, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSaveView, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLastUpdateView, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLastUpdate))
                .addGap(35, 35, 35))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtCarBrandView, txtCarModelNoView, txtCarSerialView, txtCityView, txtManuYearView, txtMaxSeatView, txtMinSeatsView});

    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateViewActionPerformed
        // TODO add your handling code here:
        btnUpdateView.setEnabled(false);
        btnSaveView.setEnabled(true);
        txtCarBrandView.setEnabled(true);
        txtManuYearView.setEnabled(true);
        txtMaxSeatView.setEnabled(true);
        txtMinSeatsView.setEnabled(true);
        txtCarSerialView.setEnabled(true);
        txtCarModelNoView.setEnabled(true);
        txtCityView.setEnabled(true);
        chkboxAvailableView.setEnabled(true);
        chlboxBookedView.setEnabled(true);
        jChkExpiredView.setEnabled(true);
        jChkNotExpiredView.setEnabled(true);
        txtCarBrandView.setEditable(true);
        txtManuYearView.setEditable(true);
        txtMaxSeatView.setEditable(true);
        txtMinSeatsView.setEditable(true);
        txtCarSerialView.setEditable(true);
        txtCarModelNoView.setEditable(true);
        txtCityView.setEditable(true);

    }//GEN-LAST:event_btnUpdateViewActionPerformed

    private void btnSaveViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveViewActionPerformed
        // TODO add your handling code here:
        String brandnameView = txtCarBrandView.getText();
        if(brandnameView == null || brandnameView.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Car Brand field cannot be empty");
            return;
        }

        String manuYear = txtManuYearView.getText();
        if (manuYear == null || manuYear.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Manufacturing year field cannot be empty", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            Integer.parseInt(txtManuYearView.getText());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Enter a valid input", " Warning", JOptionPane.WARNING_MESSAGE);
        }

        String maxCapa = txtMaxSeatView.getText();
        if (maxCapa == null || maxCapa.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Max. seats field cannot be empty", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            Integer.parseInt(txtMaxSeatView.getText());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Enter a valid input", " Warning", JOptionPane.WARNING_MESSAGE);
        }

        String minCapa = txtMinSeatsView.getText();
        if (minCapa == null || minCapa.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Min.seats field cannot be empty", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            Integer.parseInt(txtMinSeatsView.getText());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Enter a valid input", " Warning", JOptionPane.WARNING_MESSAGE);
        }

        String serNum = txtCarSerialView.getText();
        if (serNum == null || serNum.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Serial number field cannot be empty", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            Integer.parseInt(txtCarSerialView.getText());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Enter a valid input", " Warning", JOptionPane.WARNING_MESSAGE);
        }

        String modNum = txtCarModelNoView.getText();
        if (modNum == null || modNum.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Model number field cannot be empty", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String avaCity = txtCityView.getText();
        if (avaCity == null || avaCity.equals(""))
        {
            JOptionPane.showMessageDialog(null,"City field cannot be empty", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        uber.setCarBrand(txtCarBrandView.getText());
        uber.setCarManuYear(Integer.parseInt(txtManuYearView.getText()));
        uber.setCarMaxSeats(Integer.parseInt(txtMaxSeatView.getText()));
        uber.setCarMinSeats(Integer.parseInt(txtMinSeatsView.getText()));
        uber.setCarSerialNo(Integer.parseInt(txtCarSerialView.getText()));
        uber.setCarModelNo(txtCarModelNoView.getText());
        uber.setCity(txtCityView.getText());
        if(chkboxAvailableView.isSelected())
        {
            uber.setCarAvailability("Available");
        }
        else{uber.setCarAvailability("Booked");
        }
        
        if(jChkExpiredView.isSelected()){
            uber.setCarExpiry("Expired");
        }
        else{
         uber.setCarExpiry("Not Expired");
        }
        
        
        SimpleDateFormat date = new SimpleDateFormat("MM/dd/yyyy, hh:mm:ss");
        Date s = new Date();
        txtLastUpdateView.setText(date.format(s));
        
        JOptionPane.showMessageDialog(null, "Details updated Successfully");

    }//GEN-LAST:event_btnSaveViewActionPerformed

    private void txtCarBrandViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarBrandViewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarBrandViewActionPerformed

    private void btnBACKViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBACKViewActionPerformed
        // TODO add your handling code here:
        this.rightJPanel.remove(this);
        CardLayout layout = (CardLayout) this.rightJPanel.getLayout();
        
        Component[] comps = this.rightJPanel.getComponents();
        for (Component comp : comps)
        {
            if (comp instanceof ManageCarRidesJPanel){
                ManageCarRidesJPanel mngp = (ManageCarRidesJPanel) comp;
                mngp.populateTable(uberInventory,"all");
            }
        }
        Component[] compss = this.rightJPanel.getComponents();
        for (Component comp : compss)
        {
            if (comp instanceof CarRidesTableJPanel){
                CarRidesTableJPanel mngp = (CarRidesTableJPanel) comp;
                mngp.populateTable(uberInventory,"all");
            }
        }
        
        layout.previous(rightJPanel);
    }//GEN-LAST:event_btnBACKViewActionPerformed

    private void populateUber() {
        //To change body of generated methods, choose Tools | Templates.
        txtCarBrandView.setText(uber.getCarBrand());
        txtManuYearView.setText(String.valueOf(uber.getCarManuYear()));
        txtMaxSeatView.setText(String.valueOf(uber.getCarMaxSeats()));
        txtMinSeatsView.setText(String.valueOf(uber.getCarMinSeats()));
        txtCarSerialView.setText(String.valueOf(uber.getCarSerialNo()));
        txtCarModelNoView.setText(uber.getCarModelNo());
        txtCityView.setText(uber.getCity());
        if(uber.isCarAvailability().equalsIgnoreCase("Available"))
        {
            chkboxAvailableView.setEnabled(false);
            chlboxBookedView.setEnabled(false);
            chkboxAvailableView.setSelected(true);
        }
        else
        {
            chkboxAvailableView.setEnabled(false);
            chlboxBookedView.setEnabled(false);
            chlboxBookedView.setSelected(true);
        }
        if(uber.isCarExpiry().equalsIgnoreCase("Available"))
        {
            jChkExpiredView.setEnabled(false);
            jChkNotExpiredView.setEnabled(false);
            jChkExpiredView.setSelected(true);   
        }
        else
        {
            jChkExpiredView.setEnabled(false);
            jChkNotExpiredView.setEnabled(false);
            jChkNotExpiredView.setSelected(true);
        }
         
    }    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBACKView;
    private javax.swing.JButton btnSaveView;
    private javax.swing.JButton btnUpdateView;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox chkboxAvailableView;
    private javax.swing.JCheckBox chlboxBookedView;
    private javax.swing.JCheckBox jChkExpiredView;
    private javax.swing.JCheckBox jChkNotExpiredView;
    private javax.swing.JLabel lblCarAvailability;
    private javax.swing.JLabel lblCarBrand;
    private javax.swing.JLabel lblCarModelNumber;
    private javax.swing.JLabel lblCarSerialNo;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCreateRide;
    private javax.swing.JLabel lblExpiryCertifcate;
    private javax.swing.JLabel lblLastUpdate;
    private javax.swing.JLabel lblManufacturingYear;
    private javax.swing.JLabel lblMaxSeats;
    private javax.swing.JLabel lblMinSeats;
    private javax.swing.JTextField txtCarBrandView;
    private javax.swing.JTextField txtCarModelNoView;
    private javax.swing.JTextField txtCarSerialView;
    private javax.swing.JTextField txtCityView;
    private javax.swing.JTextField txtLastUpdateView;
    private javax.swing.JTextField txtManuYearView;
    private javax.swing.JTextField txtMaxSeatView;
    private javax.swing.JTextField txtMinSeatsView;
    // End of variables declaration//GEN-END:variables
}
