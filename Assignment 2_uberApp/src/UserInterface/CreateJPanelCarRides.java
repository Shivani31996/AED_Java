/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Application.Uber;
import Application.UberInventory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.awt.CardLayout;

/**
 *
 * @author Dell
 */
public class CreateJPanelCarRides extends javax.swing.JPanel {
    private JPanel rightJPanel;
    private UberInventory uberInventory;   

    /**
     * Creates new form CreateJPanel
     */

    CreateJPanelCarRides(JPanel rightJPanel, UberInventory uberInventory) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        initComponents();
        this.rightJPanel = rightJPanel;
        this.uberInventory = uberInventory;//To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        lblCreateRide = new javax.swing.JLabel();
        lblCarBrand = new javax.swing.JLabel();
        lblManufacturingYear = new javax.swing.JLabel();
        lblMaxSeats = new javax.swing.JLabel();
        lblCarModelNumber = new javax.swing.JLabel();
        lblMinSeats = new javax.swing.JLabel();
        lblCarAvailability = new javax.swing.JLabel();
        lblExpiryCertifcate = new javax.swing.JLabel();
        txtCarBrandCreate = new javax.swing.JTextField();
        txtCarModelNoCreate = new javax.swing.JTextField();
        txtManuYearCreate = new javax.swing.JTextField();
        txtMaxSeatCreate = new javax.swing.JTextField();
        txtMinSeatsCreate = new javax.swing.JTextField();
        chkboxAvailable = new javax.swing.JCheckBox();
        chlboxBooked = new javax.swing.JCheckBox();
        jChkExpired = new javax.swing.JCheckBox();
        jChkNotExpired = new javax.swing.JCheckBox();
        btnSaveCreate = new javax.swing.JButton();
        lblCarSerialNo = new javax.swing.JLabel();
        txtCarSerialCreate = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        txtCityCreate = new javax.swing.JTextField();
        btnBackCreate = new javax.swing.JButton();

        setBackground(new java.awt.Color(185, 180, 180));
        setMaximumSize(new java.awt.Dimension(860, 600));
        setMinimumSize(new java.awt.Dimension(860, 600));

        lblCreateRide.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblCreateRide.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateRide.setText("Create Rides");
        lblCreateRide.setAlignmentX(1.0F);

        lblCarBrand.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblCarBrand.setText("Car Brand:");

        lblManufacturingYear.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblManufacturingYear.setText("Manufacturing Year:");

        lblMaxSeats.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblMaxSeats.setText("Enter max. seat capacity:");

        lblCarModelNumber.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblCarModelNumber.setText("Car Model number:");

        lblMinSeats.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblMinSeats.setText("Enter min. seat capacity:");

        lblCarAvailability.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblCarAvailability.setText("Car Availability:");

        lblExpiryCertifcate.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblExpiryCertifcate.setText("Maintenance expiry certificate:");

        buttonGroup1.add(chkboxAvailable);
        chkboxAvailable.setText("Available");

        buttonGroup1.add(chlboxBooked);
        chlboxBooked.setText("Booked");

        buttonGroup2.add(jChkExpired);
        jChkExpired.setText("Expired");

        buttonGroup2.add(jChkNotExpired);
        jChkNotExpired.setText("Not expired");

        btnSaveCreate.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSaveCreate.setText("SAVE");
        btnSaveCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCreateActionPerformed(evt);
            }
        });

        lblCarSerialNo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblCarSerialNo.setText("Enter the car serial no:");

        lblCity.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblCity.setText("City:");

        btnBackCreate.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnBackCreate.setText("BACK");
        btnBackCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCreateRide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(26, 26, 26)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblManufacturingYear)
                                        .addComponent(lblCarBrand)
                                        .addComponent(lblCarModelNumber)
                                        .addComponent(lblMinSeats)
                                        .addComponent(lblMaxSeats)
                                        .addComponent(lblCarSerialNo))
                                    .addGap(60, 60, 60)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtCarModelNoCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtManuYearCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtMaxSeatCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtMinSeatsCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCarSerialCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCarBrandCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(290, 290, 290))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblExpiryCertifcate, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblCarAvailability, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblCity, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnBackCreate, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(60, 60, 60)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jChkExpired)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jChkNotExpired))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(chkboxAvailable)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(chlboxBooked))))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(62, 62, 62)
                                            .addComponent(txtCityCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(250, 250, 250)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnSaveCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(269, 269, 269)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {chkboxAvailable, chlboxBooked, jChkExpired, jChkNotExpired});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCarBrandCreate, txtCarModelNoCreate, txtCarSerialCreate, txtCityCreate, txtManuYearCreate, txtMaxSeatCreate, txtMinSeatsCreate});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBackCreate, btnSaveCreate});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblCreateRide, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarBrand)
                    .addComponent(txtCarBrandCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarModelNumber)
                    .addComponent(txtCarModelNoCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManufacturingYear)
                    .addComponent(txtManuYearCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaxSeats)
                    .addComponent(txtMaxSeatCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMinSeats)
                    .addComponent(txtMinSeatsCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarSerialNo)
                    .addComponent(txtCarSerialCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCityCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCity))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarAvailability)
                    .addComponent(chkboxAvailable)
                    .addComponent(chlboxBooked))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblExpiryCertifcate)
                    .addComponent(jChkExpired)
                    .addComponent(jChkNotExpired))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBackCreate))
                .addGap(38, 38, 38))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {chkboxAvailable, chlboxBooked, jChkExpired, jChkNotExpired});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtCarBrandCreate, txtCarModelNoCreate, txtCarSerialCreate, txtCityCreate, txtManuYearCreate, txtMaxSeatCreate, txtMinSeatsCreate});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBackCreate, btnSaveCreate});

    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCreateActionPerformed
        // TODO add your handling code here:
//Car Brand validation
        String carbrandCreate = txtCarBrandCreate.getText();
        if(carbrandCreate == null || carbrandCreate.equals(""))
            {
                JOptionPane.showMessageDialog(null,"Car Brand field cannot be empty");
                return;
            }
        
        String manuyrCreate = txtManuYearCreate.getText();
        if (manuyrCreate == null || manuyrCreate.equals("")) 
        {
        JOptionPane.showMessageDialog(null,"Manufacturing year field cannot be empty", " Warning", JOptionPane.WARNING_MESSAGE);
        return;
        }
         try {
            Integer.parseInt(txtManuYearCreate.getText());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Enter a valid input", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
            
        }   
        
//Maximum car seats validation         
         String maxSeatsCreate = txtMaxSeatCreate.getText();
        if (maxSeatsCreate == null || maxSeatsCreate.equals("")) 
        {
        JOptionPane.showMessageDialog(null,"Max. seats field cannot be empty", " Warning", JOptionPane.WARNING_MESSAGE);
        return;
        }
         try {
            Integer.parseInt(txtMaxSeatCreate.getText());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Enter a valid input", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }   

//Minimum seat validation         
          String minSeatsCreate = txtMinSeatsCreate.getText();
        if (minSeatsCreate == null || minSeatsCreate.equals("")) 
        {
        JOptionPane.showMessageDialog(null,"Min.seats field cannot be empty", " Warning", JOptionPane.WARNING_MESSAGE);
        return;
        }
         try {
            Integer.parseInt(txtMinSeatsCreate.getText());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Enter a valid input", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } 

//Car serial number validation        
         String serNumCreate = txtCarSerialCreate.getText();
         
        if (serNumCreate == null || serNumCreate.equals("")) 
        {
        JOptionPane.showMessageDialog(null,"Serial number field cannot be empty", " Warning", JOptionPane.WARNING_MESSAGE);
        return;
        }
        
        else
        {
            for(Uber uber:uberInventory.getUberList())
            {
                if(uber.getCarSerialNo() == Integer.parseInt((txtCarSerialCreate.getText())))
                {
                    JOptionPane.showMessageDialog(null, "Entered serial number already exists.");
                    txtCarSerialCreate.setText(" ");
                }
            }
         try {
            Integer.parseInt(txtCarSerialCreate.getText());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Enter a valid input", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } 
        }

//Car model Number validation         
         String modNumCreate = txtCarModelNoCreate.getText();
        if (modNumCreate == null || modNumCreate.equals("")) 
        {
        JOptionPane.showMessageDialog(null,"Model number field cannot be empty", " Warning", JOptionPane.WARNING_MESSAGE);
        return;
        }
         
         String avaCityCreate = txtCityCreate.getText();
        if (avaCityCreate == null || avaCityCreate.equals("")) 
        {
        JOptionPane.showMessageDialog(null,"City field cannot be empty", " Warning", JOptionPane.WARNING_MESSAGE);
        return;
        }
        
        if(chkboxAvailable.isSelected()== false && chlboxBooked.isSelected()== false)
        {
            JOptionPane.showMessageDialog(null,"Choose availability status", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(jChkExpired.isSelected()== false && jChkNotExpired.isSelected()== false)
        {
            JOptionPane.showMessageDialog(null,"Choose expiration option", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
       
        String carBrandName = txtCarBrandCreate.getText();
        int carManuYear = Integer.parseInt(txtManuYearCreate.getText());
        int maxCarSeats = Integer.parseInt(txtMaxSeatCreate.getText());
        int minCarSeats = Integer.parseInt(txtMinSeatsCreate.getText());
        int carSerialNo = Integer.parseInt(txtCarSerialCreate.getText());
        String carModelNo = txtCarModelNoCreate.getText();
        String availCity = txtCityCreate.getText();
        
        String carBrandName1 = txtCarBrandCreate.getText();
        String carManuYear1 = txtManuYearCreate.getText();
        String maxCarSeats1 = txtMaxSeatCreate.getText();
        String minCarSeats1 = txtMinSeatsCreate.getText();
        String carSerialNo1 = txtCarSerialCreate.getText();
        String carModelNo1 = txtCarModelNoCreate.getText();
        String availCity1 = txtCityCreate.getText();        
        
        Uber uber = uberInventory.addUber();
        uber.setCarBrand(carBrandName);
        uber.setCarManuYear(carManuYear);
        uber.setCarMaxSeats(minCarSeats);
        uber.setCarMinSeats(maxCarSeats);
        uber.setCarSerialNo(carSerialNo);
        uber.setCarModelNo(carModelNo);
        uber.setCity(availCity);
        uber.setCarAvailability("Available");
        uber.setCarExpiry("Expired");

        if(carBrandName1 != null && 
                carManuYear1 != null && 
                maxCarSeats1 != null && 
                minCarSeats1 != null && 
                carSerialNo1 != null &&
                carModelNo1 != null && 
                availCity1 != null)
        {
            JOptionPane.showMessageDialog(null,"Car details added successfully!");            
        }
        
        txtCarBrandCreate.setText("");
        txtCityCreate.setText("");
        txtManuYearCreate.setText("");
        txtMaxSeatCreate.setText("");
        txtCarModelNoCreate.setText("");
        txtMinSeatsCreate.setText("");
        txtCarSerialCreate.setText("");
        buttonGroup1.clearSelection();
        buttonGroup2.clearSelection();
                
    }//GEN-LAST:event_btnSaveCreateActionPerformed

    private void btnBackCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackCreateActionPerformed
        // TODO add your handling code here:
        rightJPanel.remove(this);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.previous(rightJPanel);
    }//GEN-LAST:event_btnBackCreateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackCreate;
    private javax.swing.JButton btnSaveCreate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox chkboxAvailable;
    private javax.swing.JCheckBox chlboxBooked;
    private javax.swing.JCheckBox jChkExpired;
    private javax.swing.JCheckBox jChkNotExpired;
    private javax.swing.JLabel lblCarAvailability;
    private javax.swing.JLabel lblCarBrand;
    private javax.swing.JLabel lblCarModelNumber;
    private javax.swing.JLabel lblCarSerialNo;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCreateRide;
    private javax.swing.JLabel lblExpiryCertifcate;
    private javax.swing.JLabel lblManufacturingYear;
    private javax.swing.JLabel lblMaxSeats;
    private javax.swing.JLabel lblMinSeats;
    private javax.swing.JTextField txtCarBrandCreate;
    private javax.swing.JTextField txtCarModelNoCreate;
    private javax.swing.JTextField txtCarSerialCreate;
    private javax.swing.JTextField txtCityCreate;
    private javax.swing.JTextField txtManuYearCreate;
    private javax.swing.JTextField txtMaxSeatCreate;
    private javax.swing.JTextField txtMinSeatsCreate;
    // End of variables declaration//GEN-END:variables
}
