/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Restaurant.Restaurant;
import Business.Role.AdminRole;
import Business.Role.CustomerRole;
import Business.Role.DeliverManRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class SystemAdminManageRestaurant extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminManageRestaurant
     */
    private JPanel userProcessContainerSAMR;
    private EcoSystem ecosystem;
    private String user;
    
    public SystemAdminManageRestaurant(JPanel userProcessContainer, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainerSAMR = userProcessContainer;
        this.ecosystem = ecosystem;
        this.user = user;
        txtNameSAMR.setEnabled(false);
        txtAddressSAMR.setEnabled(false);

        btnSubmitSAMR.setEnabled(false);
        btnDeleteSAMR.setEnabled(false);
        btnManageSAMR.setEnabled(false);
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDeleteSAMR = new javax.swing.JButton();
        btnNewRestaurantSAMR = new javax.swing.JButton();
        txtNameSAMR = new javax.swing.JTextField();
        txtAddressSAMR = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSubmitSAMR = new javax.swing.JButton();
        btnManageSAMR = new javax.swing.JButton();
        btnBackSAMR = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRestaurantsSAMR = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(204, 204, 255));

        btnDeleteSAMR.setBackground(new java.awt.Color(255, 255, 255));
        btnDeleteSAMR.setForeground(new java.awt.Color(0, 102, 102));
        btnDeleteSAMR.setText("Delete Restaurant");
        btnDeleteSAMR.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeleteSAMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSAMRActionPerformed(evt);
            }
        });

        btnNewRestaurantSAMR.setBackground(new java.awt.Color(255, 255, 255));
        btnNewRestaurantSAMR.setForeground(new java.awt.Color(0, 102, 102));
        btnNewRestaurantSAMR.setText("Create Restaurant ");
        btnNewRestaurantSAMR.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNewRestaurantSAMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewRestaurantSAMRActionPerformed(evt);
            }
        });

        txtAddressSAMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressSAMRActionPerformed(evt);
            }
        });

        jLabel1.setText("Restaurant Name:");

        jLabel2.setText("Address:");

        btnSubmitSAMR.setBackground(new java.awt.Color(255, 255, 255));
        btnSubmitSAMR.setForeground(new java.awt.Color(0, 102, 102));
        btnSubmitSAMR.setText("Submit");
        btnSubmitSAMR.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSubmitSAMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitSAMRActionPerformed(evt);
            }
        });

        btnManageSAMR.setBackground(new java.awt.Color(255, 255, 255));
        btnManageSAMR.setForeground(new java.awt.Color(0, 102, 102));
        btnManageSAMR.setText("View Restaurant");
        btnManageSAMR.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnManageSAMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageSAMRActionPerformed(evt);
            }
        });

        btnBackSAMR.setForeground(new java.awt.Color(0, 102, 102));
        btnBackSAMR.setText("< Back");
        btnBackSAMR.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBackSAMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackSAMRActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Restaurants");

        tblRestaurantsSAMR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial No.", "Restaurant Name", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRestaurantsSAMR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRestaurantsSAMRMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRestaurantsSAMR);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBackSAMR, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnNewRestaurantSAMR, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(btnManageSAMR, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDeleteSAMR, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtNameSAMR)
                                            .addComponent(txtAddressSAMR, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(btnSubmitSAMR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBackSAMR)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(btnNewRestaurantSAMR, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnManageSAMR, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDeleteSAMR, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNameSAMR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtAddressSAMR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(btnSubmitSAMR, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteSAMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSAMRActionPerformed
        // TODO add your handling code here:
        int selectedRowSAMR = tblRestaurantsSAMR.getSelectedRow();
        if (selectedRowSAMR >= 0)
        {
            Restaurant selectedRestaurant = (Restaurant) tblRestaurantsSAMR.getValueAt(selectedRowSAMR, 1);
            ecosystem.getRestaurantDirectory().deleteRestaurant(selectedRestaurant);
            JOptionPane.showMessageDialog(null, "Restaurant " + selectedRestaurant.getName()+ " deleted successfully!");
            populateTable();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnDeleteSAMRActionPerformed

    private void btnNewRestaurantSAMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewRestaurantSAMRActionPerformed
        // TODO add your handling code here:
        btnNewRestaurantSAMR.setEnabled(false);
        txtNameSAMR.setEnabled(true);
        txtAddressSAMR.setEnabled(true);
        btnSubmitSAMR.setEnabled(true);
    }//GEN-LAST:event_btnNewRestaurantSAMRActionPerformed

    private void txtAddressSAMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressSAMRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressSAMRActionPerformed

    private void btnSubmitSAMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitSAMRActionPerformed
        // TODO add your handling code here:
        Restaurant r = ecosystem.getRestaurantDirectory().createRestaurant(txtNameSAMR.getText(), txtAddressSAMR.getText());
        if(r == null)
        {
            JOptionPane.showMessageDialog(null,"Restaurant " + txtNameSAMR.getText() + " already exists!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Restaurant created successfully as " + r.getName());
            btnNewRestaurantSAMR.setEnabled(true);
            txtNameSAMR.setEnabled(false);
            txtAddressSAMR.setEnabled(false);
            btnSubmitSAMR.setEnabled(false);
            txtNameSAMR.setText("");
            txtAddressSAMR.setText("");
        }
        populateTable();
    }//GEN-LAST:event_btnSubmitSAMRActionPerformed

    private void btnManageSAMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageSAMRActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRestaurantsSAMR.getSelectedRow();
        if (selectedRow >= 0)
        {
            Restaurant selectedRestaurant = (Restaurant) tblRestaurantsSAMR.getValueAt(selectedRow, 1);
            SystemManageEmployees fs = new SystemManageEmployees(userProcessContainerSAMR, selectedRestaurant, ecosystem);
            userProcessContainerSAMR.add("SysAdminManageEmployees", fs);
            CardLayout layout = (CardLayout) userProcessContainerSAMR.getLayout();
            layout.next(userProcessContainerSAMR);
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnManageSAMRActionPerformed

    private void btnBackSAMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackSAMRActionPerformed
        // TODO add your handling code here:
        userProcessContainerSAMR.remove(this);
        Component[] componentArray = userProcessContainerSAMR.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel dwjp = (SystemAdminWorkAreaJPanel) component;
        dwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainerSAMR.getLayout();
        layout.previous(userProcessContainerSAMR);
    }//GEN-LAST:event_btnBackSAMRActionPerformed

    private void tblRestaurantsSAMRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRestaurantsSAMRMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblRestaurantsSAMR.getSelectedRow();
        if (selectedRow >= 0)
        {
            btnDeleteSAMR.setEnabled(true);
            btnManageSAMR.setEnabled(true);
        }
    }//GEN-LAST:event_tblRestaurantsSAMRMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackSAMR;
    private javax.swing.JButton btnDeleteSAMR;
    private javax.swing.JButton btnManageSAMR;
    private javax.swing.JButton btnNewRestaurantSAMR;
    private javax.swing.JButton btnSubmitSAMR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblRestaurantsSAMR;
    private javax.swing.JTextField txtAddressSAMR;
    private javax.swing.JTextField txtNameSAMR;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel)tblRestaurantsSAMR.getModel();
        dtm.setRowCount(0);
        int count1 = 1;
        if(ecosystem.getRestaurantDirectory().getRestaurantList() != null)
        {
            for(Restaurant r : ecosystem.getRestaurantDirectory().getRestaurantList())
            {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = r.getId();
                row[1] = r;
                row[2] = r.getAddress();
                dtm.addRow(row);
                count1++;
            }
        }
        else
        {
            tblRestaurantsSAMR.setEnabled(false);
        }
    }
}
