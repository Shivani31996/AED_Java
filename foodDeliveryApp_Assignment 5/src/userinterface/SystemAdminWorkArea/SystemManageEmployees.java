/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Restaurant.Restaurant;
import Business.Role.AdminRole;

import Business.Role.DeliverManRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class SystemManageEmployees extends javax.swing.JPanel {

    /**
     * Creates new form SystemManageEmployees
     */
    private JPanel userProcessContainer;
    private Restaurant restaurant;
    private EcoSystem ecosystem;
    public SystemManageEmployees(JPanel userProcessContainer, Restaurant restaurant, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.restaurant = restaurant;
        this.ecosystem = ecosystem;
        txtUsernameSME.setEnabled(false);
        txtPasswordSME.setEnabled(false);
        txtRePasswordSME.setEnabled(false);
        txtNameSME.setEnabled(false);
        txtPhoneSME.setEnabled(false);
        txtAddressSME.setEnabled(false);
        btnSubmitSME.setEnabled(false);
        btnDeleteSME.setEnabled(false);
        btnManageSME.setEnabled(false);
        radioBtnDeliverySME.setEnabled(false);
        radioBtnManagerSME.setEnabled(false);
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        txtRePasswordSME = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtAddressSME = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        radioBtnManagerSME = new javax.swing.JRadioButton();
        btnBackSME = new javax.swing.JButton();
        btnSubmitSME = new javax.swing.JButton();
        radioBtnDeliverySME = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProfileSME = new javax.swing.JTable();
        btnManageSME = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnDeleteSME = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnNewEmployeeSME = new javax.swing.JButton();
        txtNameSME = new javax.swing.JTextField();
        txtUsernameSME = new javax.swing.JTextField();
        txtPhoneSME = new javax.swing.JTextField();
        txtPasswordSME = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel5.setText("Phone Number:");

        jLabel6.setText("Address:");

        jLabel1.setText("Username: ");

        jLabel2.setText("Password: ");

        jLabel7.setText("Role:");

        jLabel3.setText("Confirm Password:");

        buttonGroup1.add(radioBtnManagerSME);
        radioBtnManagerSME.setText("Restaurant Manager");
        radioBtnManagerSME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnManagerSMEActionPerformed(evt);
            }
        });

        btnBackSME.setBackground(new java.awt.Color(255, 255, 255));
        btnBackSME.setForeground(new java.awt.Color(0, 102, 102));
        btnBackSME.setText("< Back");
        btnBackSME.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBackSME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackSMEActionPerformed(evt);
            }
        });

        btnSubmitSME.setBackground(new java.awt.Color(255, 255, 255));
        btnSubmitSME.setForeground(new java.awt.Color(0, 102, 102));
        btnSubmitSME.setText("Submit");
        btnSubmitSME.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSubmitSME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitSMEActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioBtnDeliverySME);
        radioBtnDeliverySME.setText("Delivery Man");
        radioBtnDeliverySME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnDeliverySMEActionPerformed(evt);
            }
        });

        tblProfileSME.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee No.", "Employee Name", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProfileSME.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProfileSMEMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProfileSME);

        btnManageSME.setBackground(new java.awt.Color(255, 255, 255));
        btnManageSME.setForeground(new java.awt.Color(0, 102, 102));
        btnManageSME.setText("View Employee ");
        btnManageSME.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnManageSME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageSMEActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Employees");

        btnDeleteSME.setBackground(new java.awt.Color(255, 255, 255));
        btnDeleteSME.setForeground(new java.awt.Color(0, 102, 102));
        btnDeleteSME.setText("Delete Employee");
        btnDeleteSME.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeleteSME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSMEActionPerformed(evt);
            }
        });

        jLabel4.setText("Name:");

        btnNewEmployeeSME.setBackground(new java.awt.Color(255, 255, 255));
        btnNewEmployeeSME.setForeground(new java.awt.Color(0, 102, 102));
        btnNewEmployeeSME.setText("Create Employee ");
        btnNewEmployeeSME.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNewEmployeeSME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEmployeeSMEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNewEmployeeSME, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDeleteSME, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnManageSME, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtAddressSME)
                                    .addComponent(txtPasswordSME)
                                    .addComponent(txtUsernameSME)
                                    .addComponent(txtRePasswordSME, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtNameSME, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtPhoneSME, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnSubmitSME, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(radioBtnManagerSME, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(radioBtnDeliverySME, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnBackSME)
                        .addGap(34, 34, 34)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBackSME)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnManageSME, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteSME, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNewEmployeeSME, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsernameSME, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPasswordSME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRePasswordSME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNameSME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPhoneSME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtAddressSME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(radioBtnManagerSME, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(radioBtnDeliverySME)
                .addGap(18, 18, 18)
                .addComponent(btnSubmitSME, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void radioBtnManagerSMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnManagerSMEActionPerformed
        // TODO add your handling code here:
        radioBtnDeliverySME.setSelected(false);
    }//GEN-LAST:event_radioBtnManagerSMEActionPerformed

    private void btnBackSMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackSMEActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackSMEActionPerformed

    private void btnSubmitSMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitSMEActionPerformed
        // TODO add your handling code here:
        if(validateThis())
        {
            Employee e = restaurant.getEmployeeDirectory().createEmployee(txtNameSME.getText(), txtAddressSME.getText(), txtPhoneSME.getText());
            if(e == null)
            {
                JOptionPane.showMessageDialog(null,"Employee " + txtNameSME.getText() + " already exists!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            else
            {
                if(radioBtnManagerSME.isSelected())
                {
                    UserAccount ua = ecosystem.getUserAccountDirectory().createUserAccount(txtUsernameSME.getText(), txtPasswordSME.getText(), e, new AdminRole());
                    if(ua != null)
                    {
                        JOptionPane.showMessageDialog(null, "Manager account created successfully for " + e.getName());
                    }
                    else
                    {
                        restaurant.getEmployeeDirectory().deleteEmployee(e);
                        JOptionPane.showMessageDialog(null,"Username " + txtUsernameSME.getText() + " already exists!", "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
                else
                {
                    UserAccount ua = ecosystem.getUserAccountDirectory().createUserAccount(txtUsernameSME.getText(), txtPasswordSME.getText(), e, new DeliverManRole());
                    if(ua != null)
                    {
                        DeliveryMan dm = restaurant.getDeliveryManDirectory().createDeliveryMan(txtNameSME.getText(), txtAddressSME.getText(), txtPhoneSME.getText());
                        JOptionPane.showMessageDialog(null, "Delivery Man account created successfully for " + e.getName());
                    }
                    else
                    {
                        restaurant.getEmployeeDirectory().deleteEmployee(e);
                        JOptionPane.showMessageDialog(null,"Username " + txtUsernameSME.getText() + " already exists!", "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }

                }
                btnNewEmployeeSME.setEnabled(true);
                txtUsernameSME.setText("");
                txtUsernameSME.setEnabled(false);
                txtPasswordSME.setText("");
                txtPasswordSME.setEnabled(false);
                txtRePasswordSME.setText("");
                txtRePasswordSME.setEnabled(false);
                txtNameSME.setText("");
                txtNameSME.setEnabled(false);
                txtPhoneSME.setText("");
                txtPhoneSME.setEnabled(false);
                txtAddressSME.setText("");
                txtAddressSME.setEnabled(false);
                btnSubmitSME.setEnabled(false);
                radioBtnDeliverySME.setSelected(false);
                radioBtnDeliverySME.setEnabled(false);
                radioBtnManagerSME.setSelected(false);
                radioBtnManagerSME.setEnabled(false);
            }
            populateTable();
        }
        else
        {
            return;
        }
    }//GEN-LAST:event_btnSubmitSMEActionPerformed

    private void radioBtnDeliverySMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnDeliverySMEActionPerformed
        // TODO add your handling code here:
        radioBtnManagerSME.setSelected(false);
    }//GEN-LAST:event_radioBtnDeliverySMEActionPerformed

    private void tblProfileSMEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProfileSMEMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblProfileSME.getSelectedRow();
        if (selectedRow >= 0)
        {
            btnDeleteSME.setEnabled(true);
            btnManageSME.setEnabled(true);
        }
    }//GEN-LAST:event_tblProfileSMEMouseClicked

    private void btnManageSMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageSMEActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProfileSME.getSelectedRow();
        if (selectedRow >= 0)
        {
            Employee selectedEmployee = (Employee) tblProfileSME.getValueAt(selectedRow, 1);
            SystemUpdateEmployee fs = new SystemUpdateEmployee(userProcessContainer, selectedEmployee, ecosystem);
            userProcessContainer.add("SysAdminUpdateEmployees", fs);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnManageSMEActionPerformed

    private void btnDeleteSMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSMEActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProfileSME.getSelectedRow();
        if (selectedRow >= 0)
        {
            Employee selectedEmployee = (Employee) tblProfileSME.getValueAt(selectedRow, 1);
            restaurant.getEmployeeDirectory().deleteEmployee(selectedEmployee);
            JOptionPane.showMessageDialog(null, "Employee " + selectedEmployee.getName()+ " deleted successfully!");
            populateTable();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnDeleteSMEActionPerformed

    private void btnNewEmployeeSMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEmployeeSMEActionPerformed
        // TODO add your handling code here:
        btnNewEmployeeSME.setEnabled(false);
        txtUsernameSME.setEnabled(true);
        txtPasswordSME.setEnabled(true);
        txtRePasswordSME.setEnabled(true);
        txtNameSME.setEnabled(true);
        txtPhoneSME.setEnabled(true);
        txtAddressSME.setEnabled(true);
        btnSubmitSME.setEnabled(true);
        radioBtnDeliverySME.setEnabled(true);
        radioBtnManagerSME.setEnabled(true);
    }//GEN-LAST:event_btnNewEmployeeSMEActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackSME;
    private javax.swing.JButton btnDeleteSME;
    private javax.swing.JButton btnManageSME;
    private javax.swing.JButton btnNewEmployeeSME;
    private javax.swing.JButton btnSubmitSME;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JRadioButton radioBtnDeliverySME;
    private javax.swing.JRadioButton radioBtnManagerSME;
    private javax.swing.JTable tblProfileSME;
    private javax.swing.JTextField txtAddressSME;
    private javax.swing.JTextField txtNameSME;
    private javax.swing.JTextField txtPasswordSME;
    private javax.swing.JTextField txtPhoneSME;
    private javax.swing.JTextField txtRePasswordSME;
    private javax.swing.JTextField txtUsernameSME;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel)tblProfileSME.getModel();
        dtm.setRowCount(0);
        if(restaurant.getEmployeeDirectory().getEmployeeList() != null)
        {
            for(Employee e : restaurant.getEmployeeDirectory().getEmployeeList())
            {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0]= e.getId();
                row[1]= e;
                UserAccount ua = ecosystem.getUserAccountDirectory().findEmployee(e);
                row[2] = ua.getRole().toString().substring(14).replace("Role", "");
                dtm.addRow(row);
            }
        }
        if(dtm.getRowCount() == 0)
            {
                btnDeleteSME.setEnabled(false);
                btnManageSME.setEnabled(false);
            }
    }

    private boolean validateThis() {
        String regex = "\\d{10}";
        if(("".equals(txtUsernameSME.getText())) || ("".equals(txtPasswordSME.getText())) || ("".equals(txtRePasswordSME.getText())) 
                || ("".equals(txtNameSME.getText())) || ("".equals(txtPhoneSME.getText())) || ("".equals(txtAddressSME.getText()))
                || ((radioBtnDeliverySME.isEnabled() == false) && (radioBtnManagerSME.isEnabled() == false)))
        {
            JOptionPane.showMessageDialog(null,"Please fill all details!", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        else if(!(txtPasswordSME.getText().equals(txtRePasswordSME.getText())))
        {
            JOptionPane.showMessageDialog(null,"Passwords do not match!", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        else if(!(txtPhoneSME.getText().matches(regex)))
        {
            JOptionPane.showMessageDialog(null,"Phone number must have only 10 digits!", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        else
        {
            return true;
        }
    }
}
