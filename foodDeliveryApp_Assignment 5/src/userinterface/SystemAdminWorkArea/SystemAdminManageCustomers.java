/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Role.AdminRole;
import Business.Role.CustomerRole;
import Business.Role.DeliverManRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class SystemAdminManageCustomers extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminManageCustomers
     */
    private JPanel userProcessContainerSAMC;
    private EcoSystem ecosystem;
    
    public SystemAdminManageCustomers(JPanel userProcessContainer, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainerSAMC = userProcessContainer;
        this.ecosystem = ecosystem;
        
        txtUsernameSAMC.setEnabled(false);
        txtPasswordSAMC.setEnabled(false);
        txtRePasswordSAMC.setEnabled(false);
        txtNameSAMC.setEnabled(false);
        txtPhoneSAMC.setEnabled(false);
        txtAddressSAMC.setEnabled(false);
        btnSubmitSAMC.setEnabled(false);
        btnDeleteSAMC.setEnabled(false);
        btnManageSAMC.setEnabled(false);
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBackSAMC = new javax.swing.JButton();
        btnSubmitSAMC = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProfile = new javax.swing.JTable();
        btnManageSAMC = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnDeleteSAMC = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnNewCustomerSAMC = new javax.swing.JButton();
        txtNameSAMC = new javax.swing.JTextField();
        txtUsernameSAMC = new javax.swing.JTextField();
        txtPhoneSAMC = new javax.swing.JTextField();
        txtPasswordSAMC = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtRePasswordSAMC = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtAddressSAMC = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(204, 204, 255));

        btnBackSAMC.setBackground(new java.awt.Color(255, 255, 255));
        btnBackSAMC.setForeground(new java.awt.Color(0, 102, 102));
        btnBackSAMC.setText("< Back");
        btnBackSAMC.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBackSAMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackSAMCActionPerformed(evt);
            }
        });

        btnSubmitSAMC.setBackground(new java.awt.Color(255, 255, 255));
        btnSubmitSAMC.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnSubmitSAMC.setForeground(new java.awt.Color(0, 102, 102));
        btnSubmitSAMC.setText("Submit");
        btnSubmitSAMC.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSubmitSAMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitSAMCActionPerformed(evt);
            }
        });

        tblProfile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblProfile.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial No.", "Customer Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProfile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProfileMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProfile);

        btnManageSAMC.setBackground(new java.awt.Color(255, 255, 255));
        btnManageSAMC.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnManageSAMC.setForeground(new java.awt.Color(0, 102, 102));
        btnManageSAMC.setText("View Customer ");
        btnManageSAMC.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnManageSAMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageSAMCActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Customers");

        btnDeleteSAMC.setBackground(new java.awt.Color(255, 255, 255));
        btnDeleteSAMC.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnDeleteSAMC.setForeground(new java.awt.Color(0, 102, 102));
        btnDeleteSAMC.setText("Delete Customer");
        btnDeleteSAMC.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeleteSAMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSAMCActionPerformed(evt);
            }
        });

        jLabel4.setText("Name:");

        btnNewCustomerSAMC.setBackground(new java.awt.Color(255, 255, 255));
        btnNewCustomerSAMC.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnNewCustomerSAMC.setForeground(new java.awt.Color(0, 102, 102));
        btnNewCustomerSAMC.setText("Create Customer");
        btnNewCustomerSAMC.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNewCustomerSAMC.setOpaque(false);
        btnNewCustomerSAMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCustomerSAMCActionPerformed(evt);
            }
        });

        jLabel5.setText("Phone Number:");

        jLabel6.setText("Address:");

        jLabel1.setText("Username: ");

        txtAddressSAMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressSAMCActionPerformed(evt);
            }
        });

        jLabel2.setText("Password: ");

        jLabel3.setText("Confirm Password:");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBackSAMC, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnManageSAMC, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteSAMC, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNewCustomerSAMC, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSubmitSAMC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtUsernameSAMC)
                                    .addComponent(txtPasswordSAMC)
                                    .addComponent(txtRePasswordSAMC)
                                    .addComponent(txtNameSAMC)
                                    .addComponent(txtPhoneSAMC)
                                    .addComponent(txtAddressSAMC, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnBackSAMC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(btnManageSAMC, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(btnDeleteSAMC, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsernameSAMC, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPasswordSAMC, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btnNewCustomerSAMC, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRePasswordSAMC, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNameSAMC, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPhoneSAMC, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressSAMC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(btnSubmitSAMC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackSAMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackSAMCActionPerformed
        // TODO add your handling code here:
        userProcessContainerSAMC.remove(this);
        Component[] componentArray = userProcessContainerSAMC.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel dwjp = (SystemAdminWorkAreaJPanel) component;
        dwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainerSAMC.getLayout();
        layout.previous(userProcessContainerSAMC);
    }//GEN-LAST:event_btnBackSAMCActionPerformed

    private void btnSubmitSAMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitSAMCActionPerformed
        // TODO add your handling code here:
        if(validateThisSAMC())
        {
            Employee e = ecosystem.getEmployeeDirectory().createEmployee(txtNameSAMC.getText(), txtAddressSAMC.getText(), txtPhoneSAMC.getText());

            UserAccount ua = ecosystem.getUserAccountDirectory().createUserAccount(txtUsernameSAMC.getText(), txtPasswordSAMC.getText(), e, new CustomerRole());
            if(ua != null)
            {
                Customer c = ecosystem.getCustomerDirectory().createCustomer(txtNameSAMC.getText(), txtAddressSAMC.getText(), txtPhoneSAMC.getText());
                JOptionPane.showMessageDialog(null, "Customer account created successfully for " + c.getName());
                populateTable();
                btnNewCustomerSAMC.setEnabled(true);
                txtUsernameSAMC.setText("");
                txtUsernameSAMC.setEnabled(false);
                txtPasswordSAMC.setText("");
                txtPasswordSAMC.setEnabled(false);
                txtRePasswordSAMC.setText("");
                txtRePasswordSAMC.setEnabled(false);
                txtNameSAMC.setText("");
                txtNameSAMC.setEnabled(false);
                txtPhoneSAMC.setText("");
                txtPhoneSAMC.setEnabled(false);
                txtAddressSAMC.setText("");
                txtAddressSAMC.setEnabled(false);
                btnSubmitSAMC.setEnabled(false);
            }
            else
            {
                ecosystem.getEmployeeDirectory().deleteEmployee(e);
                JOptionPane.showMessageDialog(null,"Username " + txtUsernameSAMC.getText() + " already exists!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        else
        {
            return;
        }
    }//GEN-LAST:event_btnSubmitSAMCActionPerformed

    private void tblProfileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProfileMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblProfile.getSelectedRow();
        if (selectedRow >= 0)
        {
            btnDeleteSAMC.setEnabled(true);
            btnManageSAMC.setEnabled(true);
        }
    }//GEN-LAST:event_tblProfileMouseClicked

    private void btnManageSAMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageSAMCActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProfile.getSelectedRow();
        if (selectedRow >= 0)
        {
            Customer selectedCustomer = (Customer) tblProfile.getValueAt(selectedRow, 1);
            SystemAdminUpdateCustomer fs = new SystemAdminUpdateCustomer(userProcessContainerSAMC, selectedCustomer, ecosystem);
            userProcessContainerSAMC.add("SysAdminUpdateEmployees", fs);
            CardLayout layout = (CardLayout) userProcessContainerSAMC.getLayout();
            layout.next(userProcessContainerSAMC);
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnManageSAMCActionPerformed

    private void btnDeleteSAMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSAMCActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProfile.getSelectedRow();
        if (selectedRow >= 0)
        {
            Customer selectedCustomer = (Customer) tblProfile.getValueAt(selectedRow, 1);
            ecosystem.getCustomerDirectory().deleteCustomer(selectedCustomer);
            JOptionPane.showMessageDialog(null, "Customer " + selectedCustomer.getName()+ " deleted successfully!");
            populateTable();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnDeleteSAMCActionPerformed

    private void btnNewCustomerSAMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCustomerSAMCActionPerformed
        // TODO add your handling code here:
        btnNewCustomerSAMC.setEnabled(false);
        txtUsernameSAMC.setEnabled(true);
        txtPasswordSAMC.setEnabled(true);
        txtRePasswordSAMC.setEnabled(true);
        txtNameSAMC.setEnabled(true);
        txtPhoneSAMC.setEnabled(true);
        txtAddressSAMC.setEnabled(true);
        btnSubmitSAMC.setEnabled(true);
        btnDeleteSAMC.setEnabled(true);
        btnManageSAMC.setEnabled(true);
    }//GEN-LAST:event_btnNewCustomerSAMCActionPerformed

    private void txtAddressSAMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressSAMCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressSAMCActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackSAMC;
    private javax.swing.JButton btnDeleteSAMC;
    private javax.swing.JButton btnManageSAMC;
    private javax.swing.JButton btnNewCustomerSAMC;
    private javax.swing.JButton btnSubmitSAMC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblProfile;
    private javax.swing.JTextField txtAddressSAMC;
    private javax.swing.JTextField txtNameSAMC;
    private javax.swing.JTextField txtPasswordSAMC;
    private javax.swing.JTextField txtPhoneSAMC;
    private javax.swing.JTextField txtRePasswordSAMC;
    private javax.swing.JTextField txtUsernameSAMC;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel dtmSAMC = (DefaultTableModel)tblProfile.getModel();
        dtmSAMC.setRowCount(0);
        if(ecosystem.getCustomerDirectory().getCustomerList() != null)
        {
            for(Customer c: ecosystem.getCustomerDirectory().getCustomerList())
            {
                Object[] row = new Object[dtmSAMC.getColumnCount()];
                row[0]= c.getId();
                row[1]= c;
                dtmSAMC.addRow(row);
            }
        }
        if(dtmSAMC.getRowCount() == 0)
            {
                btnDeleteSAMC.setEnabled(false);
                btnManageSAMC.setEnabled(false);
            }
    }

    private boolean validateThisSAMC() {
        String regex = "\\d{10}";
        if(("".equals(txtUsernameSAMC.getText())) || ("".equals(txtPasswordSAMC.getText())) || ("".equals(txtRePasswordSAMC.getText())) 
                || ("".equals(txtNameSAMC.getText())) || ("".equals(txtPhoneSAMC.getText())) || ("".equals(txtAddressSAMC.getText())))
        {
            JOptionPane.showMessageDialog(null,"Please fill all details!", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        else if(!(txtPasswordSAMC.getText().equals(txtRePasswordSAMC.getText())))
        {
            JOptionPane.showMessageDialog(null,"Passwords do not match!", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        else if(!(txtPhoneSAMC.getText().matches(regex)))
        {
            JOptionPane.showMessageDialog(null,"Mobile no. can have only 10 digits!", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        else
        {
            return true;
        }
    }
}
